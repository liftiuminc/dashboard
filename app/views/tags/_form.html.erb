<% # FIXME: How do I put this in the model?

    # Get the list of publishers for admin users
    @publishers = Publisher.find :all;
%>


<% form_for @tag do |f| %>
  <%= f.error_messages %>
  <% if @tag.network_id %>
     <%= hidden_field_tag "tag[network_id]", @tag.network_id%>
  <% end %>
  <div class="fieldset">
    <%= f.label :tag_name %><br />
    <%= f.text_field :tag_name %>
  </div>
  <div class="fieldset">
    <%= f.label :publisher, nil, :class => "left_label" %>
    <%= collection_select(:tag, :publisher_id, @publishers, :id, :site_name, :include_blank => true) %>
  </div>
  <div class="fieldset">
    <%= f.label :size, nil, :class => "left_label" %>
    <%= select("tag", "size", AdFormat.all.collect {|af| [ af.name_with_size, af.size ] }) %>
  </div>
  <div class="fieldset">
    <%= f.label :tier, nil, :class => "left_label" %>
    <%= select("tag", "tier", [10,9,8,7,6,5,4,3,2,1]) %>
  </div>
  <div class="fieldset">
    <%= f.label :value, "Value", :class => "left_label" %>
    $<%= f.text_field :value, :class => "input_for_number" %>
  </div>
  <div class="fieldset">
    <%= f.label :enabled, nil, :class => "left_label"%>
    <%= radio_button "tag", "enabled", "true"%>Yes
    <%= radio_button "tag", "enabled", "false"%>No
  </div>
  <div class="fieldset">
    <%= f.label :always_fill, nil, :class => "left_label" %>
    <%= radio_button "tag", "always_fill", "true"%>Yes
    <%= radio_button "tag", "always_fill", "false"%>No
  </div>
  <div class="fieldset">
    <%= f.label :sample_rate , nil, :class => "left_label"%>
    <%= f.text_field :sample_rate, :class => "input_for_number" %>
  </div>
  <div class="fieldset">
    <%= f.label :frequency_cap, nil, :class => "left_label" %>
    <%= f.text_field :frequency_cap, :class => "input_for_number" %>
  </div>
  <div class="fieldset">
    <%= f.label :rejection_time, nil, :class => "left_label" %>
    <%= f.text_field :rejection_time, :class => "input_for_number" %>
  </div>

<!-- If there is a tag template, present the choice to use the default or override -->


  <input id="tag_toggle_template" type="radio" name="tag_toggle" value="template" onClick="tagToggle(this.value)"/>Use the template for <%= @tag.network.network_name %>
  <input id="tag_toggle_override" type="radio" name="tag_toggle" value="override" onClick="tagToggle(this.value)"/>I want to override and put in my own tag
  <div id="template_tag_block">

  <div class="fieldset" id="tag_template_fieldset">
    <%= f.label :tag_template %><br />
    <%= pretty_tag @tag.network.tag_template %>

  </div>

  <!-- FIXME -->
  <div class="subform" id="tag_options_subform">
  <%if @tag.network.network_tag_options %>
      <%= f.label :tag_options, "Available Options" %>:
     <% @tag.network.network_tag_options.each do |nto| %>
	"<%= nto.option_name %>"<%= nto.required ? " <i>required</i>" : "" %>,
     <% end %>
  <% end %>
  <br />
  <br />
  <div id="tag_options">
  <% f.fields_for :tag_options do |tag_options_form| %>
    <%= render :partial => 'tag_option', :locals=>{:f => tag_options_form} %>
  <% end %>
  </div>
  <%= link_to_new_nested_form "Add a tag option", f, :tag_options %>
  </div>

  </div> <!-- / tag_template_block -->


  <div id="regular_tag_block">
  <div class="fieldset" id="tag_template_fieldset">
    <%= f.label :tag %><br />
    <%= f.text_area :tag, :class => "tag_input" %>
  </div>
  </div>

<script>
function tagToggle(value){
	if (value == "template"){
	  $("regular_tag_block").hide();
	  $("template_tag_block").show();
	  $("tag_toggle_template").checked = true;
	} else {
	  $("regular_tag_block").show();
	  $("template_tag_block").hide();
	  $("tag_toggle_override").checked = true;
	}
}
<%= !@tag.tag.blank? ? 'tagToggle("override");' : 'tagToggle("template");' %>
</script>

  <p><%= liftium_submit "Save Changes" %></p>

<% end %><!-- form_for -->
